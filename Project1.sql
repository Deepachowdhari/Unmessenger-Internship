CREATE DATABASE ORG;

USE ORG;

CREATE TABLE Customers (
CustomerID INT PRIMARY KEY,
Name VARCHAR(255),
Email VARCHAR(255),
JoinDate DATE
);

INSERT INTO Customers (CustomerID, Name, Email, JoinDate) VALUES
(1, 'John Doe', 'johndoe@example.com', '2020-01-10'),
(2, 'Jane Smith', 'janesmith@example1.com', '2020-01-15'),
(3, 'Kevin Smith', 'kevinsmith@example11.com', '2021-02-19'),
(4, 'Soraya Hall', 'sorayahall@gmail.com', '2020-04-15'),
(5, 'Alex Deo', 'alexdeo@example.com', '2010-07-15'),
(6, 'Cindy Hackathorne', 'cindyhack@support.com', '2000-01-12'),
(7, 'Steve Joe', 'Stevejoe@net.com', '2020-03-10'),
(8, 'Kelly Henry', 'Kellyhenry@hr.com', '2018-07-15'),
(9, 'Kim Rom', 'kimrom@rediffmail.com', '2019-06-11'),
(10, 'Zoya Ralley', 'zoyaralley@yahoo.com', '2017-02-15');

select * from Customers;

CREATE TABLE Products (
ProductID INT PRIMARY KEY,
Name VARCHAR(255),
Category VARCHAR(255),
Price Decimal(10,2)
);

INSERT INTO Products (ProductID, Name, Category, Price) VALUES
(1, 'Laptop', 'Electronics', 999.99),
(2, 'SmartPhone', 'Electronics',499.99),
(3, 'Iphone', 'Electronics',899.99),
(4, 'Dishwasher', 'HomeAppliances',799.99),
(5, 'Vaccum Cleaner', 'Electronics',499.99),
(6, 'SmartPhone', 'Electronics',499.00),
(7, 'Dining Table', 'Furniture',550.00),
(8, 'Jeans', 'Clothing',490.00),
(9, 'TV', 'Electronics',399.99),
(10, 'Mud Pots', 'Gardening',250.99) 
;

select * from Products;

CREATE TABLE Orders (
OrderID INT PRIMARY KEY,
CustomerID INT,
OrderDate DATE,
TotalAmount DECIMAL(10, 2),
FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)
VALUES
(1, 1, '2020-02-15', 1499.98),
(2, 2, '2022-02-17', 1299.99),
(3, 3, '2019-01-13', 1500.00),
(4, 3, '2020-06-19', 700.00),
(5, 2, '2021-02-17', 699.99),
(6, 5, '2023-02-18', 1250.00),
(7, 6, '2021-02-17', 1680.00),
(8, 2, '2020-03-17', 165.00),
(9, 4, '2020-02-17', 499.99),
(10, 7, '2020-03-21', 78.99)
;

select * from Orders;

CREATE TABLE OrderDetails (
OrderDetailID INT PRIMARY KEY,
OrderID INT,
ProductID INT,
Quantity INT,
PricePerUnit DECIMAL(10, 2),
FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity,
PricePerUnit) VALUES
(1, 1, 1, 1, 999.99),
(2, 2, 2, 2, 499.99),
(3, 3, 2, 3, 79.99),
(4, 3, 2, 1, 652.00),
(5, 7, 2, 1, 252.99),
(6, 4, 2, 1, 672.00),
(7, 5, 2, 1, 499.99),
(8, 6, 5, 2, 29.99),
(9, 5, 2, 1, 350.00),
(10, 1, 2, 1, 499.99)
;

select * from OrderDetails;

/* 1. Select all customers...*/
select Name from Customers;

/*1.2 Show all products in the Electronics category...*/
select * from Products where category='Electronics'; 

/* 1.3 . Find the total number of orders placed...*/
select count(OrderID) from Orders;

/*1.4. .... Display the details of the most recent order...*/
select OrderID, OrderDate from Orders  order by OrderDate desc;

/*2.1...List all products along with the names of the customers who ordered them...*/
Select Orders.OrderID, Customers.Name FROM Orders, Customers where Orders.CustomerID = Customers.CustomerID;

/*2.2...Show orders that include more than one product...*/
select OrderID from OrderDetails where Quantity>1;

/*2.3.... Find the total sales amount for each customer...*/
SELECT c.CustomerID, c.Name, SUM(od.Quantity * od.PricePerUnit) AS TotalSalesAmount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY c.CustomerID, c.Name;

/*3.1...Calculate the total revenue generated by each product category...*/
SELECT  p.Category, SUM(od.Quantity * od.PricePerUnit) AS TotalRevenue FROM Products p left JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY p.Category;

/*3.2.... Determine the average order value...*/
select avg(PricePerUnit*Quantity) as AverageOrderValue from OrderDetails;

/*3.3... Find the month with the highest number of orders...*/
select extract(MONTH from OrderDate) as Month,COUNT(*) AS Highest_Number_of_Orders from Orders GROUP BY Month ORDER BY Highest_Number_of_Orders DESC LIMIT 1;

/*4.1...Identify customers who have not placed any orders...*/
select *from Customers WHERE CustomerID not IN (select CustomerID from Orders);

/*4.2...Find products that have never been ordered...*/
select * from Products where ProductID NOT IN (select ProductID from Orders);

/*4.3....Show the top 3 best-selling products...*/
Select ProductID,SUM(Quantity) AS Best_Selling_Items FROM OrderDetails GROUP BY ProductID ORDER BY Best_Selling_Items DESC LIMIT 3;

/*5.1...List all orders placed in the last month...*/
SELECT *FROM Orders WHERE OrderDate >= DATE_SUB(NOW(), INTERVAL 1 MONTH);

/*5.2...Determine the oldest customer interms of membership duration...*/
SELECT Name, CustomerID FROM Customers ORDER BY JoinDate ASC LIMIT 1;

/*6.1...Rank customers based on their total spending...*/
SELECT OrderID, RANK() OVER (ORDER BY (PricePerUnit*Quantity) DESC) AS Customer_Rank FROM OrderDetails;

/*6.2...Identify the most popular product category...*/
select Category, COUNT(*) AS MostPopularCategory FROM Products GROUP BY Category ORDER BY MostPopularCategory DESC LIMIT 1;

/*6.3...calculate the month over month growth rate in sales...*/
SELECT
  YEAR(OrderDate) AS order_year,
  MONTH(OrderDate) AS order_month,
  SUM(TotalAmount) AS monthly_sales,
  (
    SUM(TotalAmount) - LAG(SUM(TotalAmount)) OVER (
      ORDER BY
        YEAR(OrderDate),
        MONTH(OrderDate)
    )
  ) / LAG(SUM(TotalAmount)) OVER (
    ORDER BY
      YEAR(OrderDate),
      MONTH(OrderDate)
  ) AS growth_rate
FROM
  Orders
GROUP BY
  order_year,
  order_month;
  
  /*7.1...add a new customer to the customer table.../
    
select * from Customers;
INSERT INTO Customers (CustomerID, Name, Email, JoinDate) values (11, 'Arix Kim', 'arixkim@example.com', '2019-05-10');

select * from Customers;

/*7.2...Update the price of a specific product...*/
UPDATE Products SET Price = 899.99 WHERE ProductID = 2;

select *from Products;